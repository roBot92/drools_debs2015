
//created on: 2017.03.29.
package onlab.event




//list any import classes here.
//import accumulate MedianAccumulateFunction medianf
import onlab.positioning.*
import org.kie.api.runtime.rule.QueryResults
import java.math.BigDecimal
import java.util.ArrayList
import onlab.utility.CustomTreeMultiset



//declare any global variables here
global onlab.utility.ProfitableAreaToplistSet mostProfitableAreas
global onlab.utility.FrequentRoutesToplistSet mostFrequentRoutes



declare TaxiLog
@role(event)
@timestamp(dropoff_datetime)
@expires( 31m )
end

declare Tick
@role(event)
@timestamp(currentTime)
@expires( 1s )
end


declare ActivateRoute
@role(fact)
end

declare RefreshRoute
@role(fact)
end

declare Route
@role(event)
@timestamp(lastDropoffTime)
end

declare ReOrderRoutes
@role(event)
@expires(1s)
end

rule task1_newTaxiLog
salience 0
	when
			$tlog:TaxiLog(!processed, $pickupCell: pickup_cell, $dropoffCell: dropoff_cell, $dropoffDate: dropoff_datetime)
	then
			$tlog.setProcessed(true);
			update($tlog);
			insertLogical(new ActivateRoute($pickupCell, $dropoffCell,$dropoffDate));
			insert(new RefreshRoute($pickupCell, $dropoffCell, $dropoffDate.getTime()));
			
end

 
rule task1_activateRoute
salience 11
	when
		ActivateRoute($pickupCell : pickup_cell, $dropoffCell: dropoff_cell, $ctime : lastInserted)
		not Route($pickupCell == pickup_cell, $dropoffCell == dropoff_cell)
	then
		insert(new Route($pickupCell, $dropoffCell, $ctime , 1));
end


rule task1_refreshRoute
salience 11
	when
		 $ref:RefreshRoute($pickupCell : pickup_cell, $dropoffCell : dropoff_cell, $ctime: currentTime )
		 $route: Route($pickupCell == pickup_cell, $dropoffCell == dropoff_cell)
		 $countOfRoutes : java.lang.Number() from accumulate (
			TaxiLog($pickupCell == pickup_cell, $dropoffCell == dropoff_cell) over window:time(30m),
			count()
		 ) 
	then
		
		 if($ctime != -1){
			$route.setLastDropoffTime(new java.util.Date($ctime));
		 }
		 $route.setFrequency($countOfRoutes.longValue());
		 update($route);
		 mostFrequentRoutes.add($route);
		 retract($ref);
end

rule task1_reOrderRoutes
salience -2
	when
		ReOrderRoutes()
		$allReorderCollection: java.util.ArrayList() from collect (ReOrderRoutes())
		$routes: ArrayList() from collect (Route())
						
	then
		 mostFrequentRoutes.clear();
		 if($routes != null){
			mostFrequentRoutes.addAll($routes);
			$routes.clear();
		 }
		 for(Object $reorder : $allReorderCollection){
			retract($reorder);
		 }
		 $allReorderCollection.clear();
end

rule task1_deactivateRoute
salience -5
	when
		Tick($ctime : currentTime)
		$route:Route(lastDropoffTime.getTime() + 30 * 60 * 1000 < $ctime)
	then
		retract($route);
		if(mostFrequentRoutes.contains($route)){
			insert(new ReOrderRoutes());
		}
		
end

rule task1_removeTaxiLogFromRoute
salience 0
	when
		Tick($ctime : currentTime)
		$tlog:TaxiLog($pickupCell: pickup_cell, $dropoffCell: dropoff_cell, dropoff_datetime.getTime() + 30 * 60 *100 < $ctime)
	then
		retract($tlog);
		insert(new RefreshRoute($pickupCell, $dropoffCell, -1));
		insert(new ReOrderRoutes());
end

//For debug
query "routes"  ()

      routes: Route()
end

query "taxis"()
	taxis: TaxiLog()
end